<!DOCTYPE html>
<html>

<head>
    <title>Tripathi Bioinformatics</title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <style>
        .input_type_buttons {
            width: 10rem;
            height: 4rem;
            border-radius: 1rem;
            background-color: khaki;
        }

        .centered {
            display: flex;
            flex-direction: column;
            align-items: center;
        }
    </style>
</head>

<body class="centered">
    <h1>Bioinformatics File Information</h1>

    <!-- Input Type Buttons -->
    <h3>Select an Input Type</h3>
    <div>
        <button onclick="select_input_type('DNA')" class="input_type_buttons">
            <h4>DNA</h4>
        </button>
        <button onclick="select_input_type('RNA')" class="input_type_buttons">
            <h4>RNA</h4>
        </button>
    </div>

    <!-- Upload Main Files -->
    <section id="file_uploader_section" hidden>
        <h3>Upload File(s)</h3>
        <form id="mainFileForm" enctype="multipart/form-data">
            <input type="file" name="file" id="Main_File_Uploader" multiple disabled>
            <button type="button" onclick="processMainFile()">Confirm</button>
        </form>
        <p id="fileTypeInfo"></p>
    </section>

    <!-- Upload Adapter Files -->
    <section id="adapter_section" hidden>
        <h3 id="adapterCheckHeading"></h3>
        <form id="adapterFileForm" action="/adapter-file-upload" method="post" enctype="multipart/form-data">
            <input type="file" name="file" id="Adapter_File_Uploader" multiple disabled>
            <button id="adapterUploadButton" type="submit">Confirm</button>
        </form>
    </section>

    <!-- Upload RNA Genome Files (Optional) -->
    <section id="rna_section" hidden>
        <h3>Reference Genome/Transcriptome</h3>
        <form id="genomeFileForm" enctype="multipart/form-data">
            <input type="file" name="file" id="RNA_Genome_Uploader" multiple disabled>
            <button type="button" onclick="processGenomeFile()">Confirm</button>
        </form>
        <p id="genomeTypeInfo"></p>
    </section>

    <!-- Continue Button -->
    <form action="/qc-check-2" method="post">
        <!-- can send the variables along as hidden values in this form -->
        <button type="submit" id="file_info_continue_button" disabled>
            <h3>Continue</h3>
        </button>
    </form>


    <!-- ... LOGIC ... -->
    <script>
        // ... INPUT TYPE BUTTONS ... //

        // Define the input type
        let input_type = '';

        // Get references to the buttons and the RNA Genome Uploader
        const RNA_Genome_Uploader = document.getElementById('RNA_Genome_Uploader');

        // Get referneces to the sections
        const fileSection = document.getElementById('file_uploader_section');
        const adapterSection = document.getElementById('adapter_section');
        const rnaSection = document.getElementById('rna_section');

        // Get references to the upload button and the file information text
        const Main_File_Uploader = document.getElementById('Main_File_Uploader');
        const fileTypeCheck = document.getElementById('fileTypeInfo');

        // INPUT TYPE BUTTONS

        function select_input_type(type) {
            input_type = type;
            Main_File_Uploader.disabled = false;
            RNA_Genome_Uploader.disabled = true;
            fileSection.hidden = false;
            if (type == 'RNA') {
                rnaSection.hidden = false;
            } else {
                rnaSection.hidden = true;
            }
        };


        // ... MAIN FILE UPLOADER ... //

        // Get the Adapter objects
        hasAdapters = false;
        const ACHeading = document.getElementById('adapterCheckHeading');
        const adapterFileInput = document.getElementById('Adapter_File_Uploader');
        const adapterUploadButton = document.getElementById('adapterUploadButton');

        // Get the Genome objects
        const genomeTypeInfo = document.getElementById('genomeTypeInfo');

        // Get the continue button
        const continue_button = document.getElementById('file_info_continue_button');


        // When a file is uploaded, display the detected file type
        Main_File_Uploader.addEventListener('change', function () {
            const selectedFile = Main_File_Uploader.files[0];

            // Check and display the file type(s). If it's not a valid type, say so
            if (selectedFile) {
                const fileName = selectedFile.name;
                const fileExtension = fileName.split('.').pop().toLowerCase();

                // Check the file extension to determine the file type
                if (fileExtension === 'bcl') {
                    fileTypeCheck.textContent = 'BCL file detected';
                } else if (fileExtension === 'fastq') {
                    fileTypeCheck.textContent = 'FastQ file detected';
                } else if (fileExtension === 'fasta' || fileExtension === 'fast5') {
                    fileTypeCheck.textContent = 'FASTA and FAST5 file detected';
                } else if (fileExtension === 'bam') {
                    fileTypeCheck.textContent = 'BAM file detected';
                } else if (fileExtension === 'sam' || fileExtension === 'cram') {
                    fileTypeCheck.textContent = 'SAM and CRAM files detected';
                } else {
                    fileTypeCheck.textContent = 'Unknown file type';
                }
            }
        });

        function processMainFile() {
            const Main_File_Uploader = document.getElementById('Main_File_Uploader');
            const formData = new FormData();

            for (const file of Main_File_Uploader.files) {
                formData.append('files', file);
            }

            // Make an asynchronous request to the server using the Fetch API
            fetch('/main-file-upload', {
                method: 'POST',
                body: formData,
            })
                .then(response => response.json()) // Assume the server sends JSON data
                .then(data => {
                    // ...  ADAPTERS ... //
                    // Run FastQC on the files and check for adapters
                    hasAdapters = data.hasAdapters;

                    // Set the adapter text/variable and uploader enabled settings accordingly
                    if (hasAdapters) {
                        adapterSection.hidden = false;
                        ACHeading.textContent = 'Your data appears to have an adapter applied. Please upload an adapter file.'
                        adapterFileInput.disabled = false;
                    } else {
                        adapterSection.hidden = false;
                        ACHeading.textContent = 'We found no adapters on your file.'
                        adapterFileInput.disabled = true;
                        // if input type is DNA and there are no adapters, enable the continue button
                        if (input_type === 'DNA') {
                            continue_button.disabled = false;
                        }
                    }

                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

        // If an adapter file is uploaded...
        // nothing to do! just send it to the backend
        // and set up a listener to activate the continue button if input type is DNA
        adapterUploadButton.addEventListener('click', function () {
            if (input_type === 'DNA') {
                continue_button.disabled = false;
            }
        });

        // If a genome file is uploaded...
        function processGenomeFile() {
            const RNA_Genome_Uploader = document.getElementById('RNA_Genome_Uploader');
            const genomeFormData = new FormData();

            for (const file of RNA_Genome_Uploader.files) {
                genomeFormData.append('files', file);
            }

            // Make an asynchronous request to the server using the Fetch API
            fetch('/main-file-upload', {
                method: 'POST',
                body: genomeFormData,
            })
                .then(response => response.json()) // Assume the server sends JSON data
                .then(data => {
                    // have the backend check if it's a transcriptome or not
                    // set that variable and the info text, then activate the continue button
                    const type = data.type;
                    genomeTypeInfo.textContent = 'Genome type: ${genomeTypeInfo}';
                    continue_button.disabled = false;

                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }

    </script>

</body>

</html>