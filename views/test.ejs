<head>
    <title>Tripathi Bioinformatics</title>
    <link rel="stylesheet" href="https://use.typekit.net/azy2ine.css">
</head>

<body>
    <button onclick="RunCommand()">Run Command</button>
</body>

<script>
    async function RunCommand () {
        try {
                await runIt();
            } catch (error) {
                console.error('Error fetching data:', error);
            }
        
    }

    const runIt = () => {
        return new Promise((resolve) => {
            
            executable = {
                isEnabled : false,
                title : "Run FastQC",
                checkFile : 'convertedFastQ.fq',
                environment : 'fastqc',
                specialCase : ['output_dir', 'FastQC_Output'],
                parameters : [],
                command : "fastqc <main_file> -o usr/output/FastQC_Output",
                downloadables: [{enabled: false, isVisual: false, label: "FastQC Results", path:"FastQC_Output"}]
            }
            let formData = new FormData();
            formData.append('Executable', JSON.stringify(executable));

            // setStatus(command.serverCall, 'running');

            fetch('/run-command', {
                method: 'POST',
                body: formData,
            })
                .then(response => {
                    if (!response.ok) {
                    // If response is not OK, throw an error with the status text
                    throw new Error(`HTTP error! Status: ${response.status} ${response.statusText}`);
                    }
                    // Assume the server sends JSON data
                    return response.json();
                })
                .then(data => {
                    // Handle Response
                    console.log(executable.title + ' response:', data);
                    // setStatus(command.serverCall, 'done');
                    resolve(10);
                })
                .catch(error => {
                    // Handle the error more gracefully
                    console.error('Error with ' + executable.title + ' :', error);
                    // setStatus(command.serverCall, 'error');
                    resolve(0);
                });
        });
    };
</script>