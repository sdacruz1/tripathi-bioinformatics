<!DOCTYPE html>
<html>

<head>
    <title>Tripathi Bioinformatics</title>
    <link rel="stylesheet" href="https://use.typekit.net/azy2ine.css">
    <link rel='stylesheet' href='/stylesheets/pipeline.css' />
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <link rel='stylesheet' href='/stylesheets/dna-pipeline.css' />
</head>

<body>
    <!-- Toolbar -->
    <%- include('partials/toolbar') %>

    <div class="timeline_content">
    <h1>Recommended Pipeline</h1>
    <h3 style="color:black;">Edit your timeline if necessary:</h3>

    <form id="dnaPipelineForm" action="/running" method="post">


    <% for (let i=0; i < categories.length; i++) { %>
        
        <button type="button" class="collapsible" onclick="toggleCollapsible('section<%= i %>')">
            <h3> <%=categories[i][0] %> </h3>
        </button>

        <div class="content" id="section<%= i %>">
            <% for (let j=0; j < categories[i][1].length; j++) { 
                if (categories[i][0] === "File Processing") {
                    if (infoSteps[j] === 0) { continue; }
                } %>
                <div>
                    <label>
                        <div style="display: flex;">
                        <input type="range" min="0" max="1" step="1" value="<%= categories[i][1][j][1] ? 1 : 0;%>" name="slider_<%= i %>_<%= j %>">
                        <h4 class="category_labels"><%= categories[i][1][j][0] %></h4>
                    </div>
                    </label>

                    <!-- if there are no options for this setting, don't bother with all that -->
                    <% if (categories[i][1][j][2].length == 0) { %>
                        </div>
                    <% continue; } %>

                    <!-- The set parameters container. For each parameter, make an input and save its value to the array slot -->
                    <div id="options_<%= i %>_<%= j %>" class="options-container <%= categories[i][1][j][1] ? '' : 'hidden' %>">
                        <% for (let k=0; k < categories[i][1][j][2].length; k++)  {
                            let curr_option = categories[i][1][j][2][k]; %>
                            <div style="display: flex;">
                        <label for="<%=curr_option[0]%>"><%=curr_option[0]%>:</label>

                        <% if (curr_option[1] == "number") { %>
                            <input class="option_input" type="number" id="<%=curr_option[0]%>" value="<%=curr_option[3]%>">
                        <br>
                        <% } else if (curr_option[1] == "checkbox") { %>
                            <input class="option_input" type="checkbox" id="<%=curr_option[0]%>" <% if (curr_option[3]) { %>checked<% } %>>
                        <br>
                        <% } else { %>
                            <select class="option_input" id="<%=curr_option[0]%>">
                                <% for (let l=0; l < curr_option[2].length; l++) { %>
                                <option value="<%=curr_option[2][l]%>"><%=curr_option[2][l]%></option>
                                <% } %>
                            </select>
                        <br>
                        <% } %>
                    </div>
                        <% } %>

                        <!-- Switch container visibilites -->
                        <button type="button" class="save-btn" onclick="saveButton('<%= i %>', '<%= j%>')">Save</button>
                    </div>
                
                    <!-- The display parameters container. For each parameter, display the value in its array slot -->
                    <div id="options_display_<%= i %>_<%= j %>" class="options-display hidden">
                        <!-- Display options -->
                        <% for (let k=0; k < categories[i][1][j][2].length; k++)  {
                            let curr_option = categories[i][1][j][2][k]; %>
                            <div style="display: flex;">
                            <p style="color: #b985d9;"><%=curr_option[0]%>:</p>
                            <p style="margin-left: 1rem;" id="option_<%= i %>_<%= j %>_<%= k %>_display"></p>
                        </div>
                        <% } %>
                        <!-- Switch container visibilities -->
                        <button type="button" onclick="editButton('<%= i %>', '<%= j%>')" class="edit-btn">Edit</button>
                    </div>
                
                    
                </div>
            <% } %>
        </div>
        <% } %>

        <%- '<script>' %>
            const form = document.getElementById('dnaPipelineForm');
            const categories = JSON.parse('<%- JSON.stringify(categories) %>');

            function saveButton(index1, index2) {
                // Save the selected values
                const category = categories[index1][1][index2];
                const optionsList = category[2];

                for (let k = 0; k < optionsList.length; k ++) {
                    option = optionsList[k];
                    optionInput = document.getElementById(option[0]);
                    optionDisplayTag = document.getElementById(('option_' + index1 + '_' + index2 + '_' + k + '_display'));
                    switch(option[1]) {
                        case "number":
                            option[3] = optionInput.value;
                            break;
                        case "checkbox":
                            option[3] = optionInput.checked;
                            break;
                        case "select":
                            option[3] = optionInput.value;
                            break;
                        default:
                            console.log("Not a valid input type");
                    }
                    optionDisplayTag.innerText = option[3].toString();
                };

                // Switch to the display div
                const optionsId = 'options_' + index1 + '_' + index2;
                const displayId = 'options_display_' + index1 + '_' + index2;
                optionsDiv = document.getElementById(optionsId);
                displayDiv = document.getElementById(displayId);

                optionsDiv.classList.add('hidden');
                displayDiv.classList.remove('hidden');
            }

            function editButton(index1, index2) {
                // Switch to the options div
                const optionsId = 'options_' + index1 + '_' + index2;
                const displayId = 'options_display_' + index1 + '_' + index2;
                optionsDiv = document.getElementById(optionsId);
                displayDiv = document.getElementById(displayId);

                displayDiv.classList.add('hidden');
                optionsDiv.classList.remove('hidden');
            }
    
            form.addEventListener('change', function (event) {
                if (event.target.type === 'range') {
                    // Extract i and j from the slider name
                    const sliderName = event.target.name;
                    const [, i, j] = sliderName.split('_').map(Number);
    
                    // Set the correct array element accordingly
                    categories[i][1][j][1] = (event.target.value == 1);

                    const elementId = 'options_' + i + '_' + j;
                    optionsDiv = document.getElementById(elementId);

                    const displayId = 'options_display_' + i + '_' + j;
                    displayDiv = document.getElementById(displayId);

                    if (categories[i][1][j][1]) {
                        displayDiv.classList.remove('hidden');
                    } else {
                        optionsDiv.classList.add('hidden');
                        displayDiv.classList.add('hidden');
                    }

                }
            });

            form.addEventListener('submit', function(event) {
                // prevent submission for now
                event.preventDefault();

                // send the categories array as a hidden input
                const sendCategories = document.querySelector('[name="categories"]');
                sendCategories.value = encodeURIComponent(JSON.stringify(categories));
    
                // Submit the form
                form.submit();
            });

            
            // JavaScript to handle the toggling
            function toggleCollapsible(sectionId) {
                const collapsibleContent = document.getElementById(sectionId);
                collapsibleContent.classList.toggle('active');
            }
        <%- '</script>' %>

        <input type="hidden" name="categories" >
        <button class="pipeline_continue_button"><h3 style="color: black">Continue</h3></button>
        </div>
    </form>

</body>

</html>