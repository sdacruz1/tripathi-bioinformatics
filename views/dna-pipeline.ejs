<!DOCTYPE html>
<html>

<head>
    <title>Tripathi Bioinformatics</title>
    <link rel="stylesheet" href="https://use.typekit.net/azy2ine.css">
    <link rel='stylesheet' href='/stylesheets/pipeline.css' />
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <link rel='stylesheet' href='/stylesheets/dna-pipeline.css' />
</head>

<body>
    <!-- Toolbar -->
    <%- include('partials/toolbar') %>

    <div class="timeline_content">
        <h1>Recommended Pipeline</h1>
        <h3 style="color:black;">Edit your timeline if necessary:</h3>

        <form id="dnaPipelineForm" action="/running" method="post">
            <% DNACategories.forEach(category => { %>
                <button type="button" class="collapsible" onclick="toggleCollapsible('section_<%= category.title %>')">
                    <h3><%= category.title %></h3>
                </button>

                <div class="content" id="section_<%= category.title %>">
                    <% for (let j = 0; j < category.entries.length; j++) { %>
                        <% if (category.title === "File Processing" && infoSteps[j] === 0) { continue; } %>
                        <% let entry = DNACommands.get(category.entries[j]); %>
                        <% let parameters = DNAParameters.get(entry.serverCall); %>

                        <div>
                            <label>
                                <div style="display: flex;">
                                    <input type="range" min="0" max="1" step="1" value="<%= entry.isEnabled ? 1 : 0 %>" name="slider_<%= entry.serverCall %>">
                                    <h4 class="category_labels"><%= entry.title %></h4>
                                </div>
                            </label>

                            <% if (parameters.length === 0) { %>
                                </div>
                                <% continue; } %>

                            <div id="options_<%= entry.serverCall %>" class="options-container <%= entry.isEnabled ? '' : 'hidden' %>">
                                <% parameters.forEach(parameter => { %>
                                    <div style="display: flex;">
                                        <label for="<%= parameter.title %>"><%= parameter.title %>:</label>
                                        <% if (parameter.type === "number") { %>
                                            <input class="option_input" type="number" id="<%= parameter.title %>" value="<%= parameter.value %>">
                                        <% } else if (parameter.type === "checkbox") { %>
                                            <input class="option_input" type="checkbox" id="<%= parameter.title %>" <% if (parameter.value) { %>checked<% } %>>
                                        <% } else { %>
                                            <select class="option_input" id="<%= parameter.title %>">
                                                <% parameter.options.forEach(option => { %>
                                                    <option value="<%= option %>" <% if (option === parameter.value) { %>selected<% } %>><%= option %></option>
                                                <% }) %>
                                            </select>
                                        <% } %>
                                    </div>
                                <% }) %>
                                <button type="button" class="save-btn" onclick="saveButton('<%= entry.serverCall %>')">Save</button>
                            </div>

                            <div id="options_display_<%= entry.serverCall %>" class="options-display hidden">
                                <% parameters.forEach(parameter => { %>
                                    <div style="display: flex;">
                                        <p style="color: #b985d9;"><%= parameter.title %>:</p>
                                        <p style="margin-left: 1rem;" id="option_<%= parameter.title %>_display"></p>
                                    </div>
                                <% }) %>
                                <button type="button" onclick="editButton('<%= entry.serverCall %>')" class="edit-btn">Edit</button>
                            </div>
                        </div>
                    <% } %>
                </div>
            <% }) %>

            <input type="hidden" name="DNACommands">
            <input type="hidden" name="DNAParameters">
            <button class="pipeline_continue_button"><h3 style="color: black">Continue</h3></button>
        </form>
    </div>

    <script>
        const form = document.getElementById('dnaPipelineForm');
        let DNACommands = new Map(Object.entries(JSON.parse('<%= JSON.stringify(Object.fromEntries(DNACommands)) %>')));
        let DNAParameters = new Map(Object.entries(JSON.parse('<%= JSON.stringify(Object.fromEntries(DNAParameters)) %>')));

        function saveButton(entryTag) {
            let parameters = DNAParameters.get(entryTag);
            parameters.forEach(parameter => {
                let optionInput = document.getElementById(parameter.title);
                let optionDisplayTag = document.getElementById('option_' + parameter.title + '_display');
                let newValue;
                switch (parameter.type) {
                    case "number":
                        newValue = optionInput.value;
                        break;
                    case "checkbox":
                        newValue = optionInput.checked;
                        break;
                    case "select":
                        newValue = optionInput.value;
                        break;
                    default:
                        console.log("Not a valid input type");
                }
                parameter.value = newValue;
                optionDisplayTag.innerText = newValue.toString();
            });

            let optionsDiv = document.getElementById('options_' + entryTag);
            let displayDiv = document.getElementById('options_display_' + entryTag);
            optionsDiv.classList.add('hidden');
            displayDiv.classList.remove('hidden');
        }

        function editButton(entryTag) {
            let optionsDiv = document.getElementById('options_' + entryTag);
            let displayDiv = document.getElementById('options_display_' + entryTag);
            displayDiv.classList.add('hidden');
            optionsDiv.classList.remove('hidden');
        }

        form.addEventListener('change', function (event) {
            if (event.target.type === 'range') {
                const sliderName = event.target.name;
                const tag = sliderName.split('_')[1];
                DNACommands.get(tag).isEnabled = event.target.value == 1;

                let optionsDiv = document.getElementById('options_' + tag);
                let displayDiv = document.getElementById('options_display_' + tag);

                if (DNACommands.get(tag).isEnabled) {
                    displayDiv.classList.remove('hidden');
                } else {
                    optionsDiv.classList.add('hidden');
                    displayDiv.classList.add('hidden');
                }
            }
        });

        form.addEventListener('submit', function (event) {
            event.preventDefault();
            document.querySelector('[name="DNACommands"]').value = encodeURIComponent(JSON.stringify(Object.fromEntries(DNACommands)));
            document.querySelector('[name="DNAParameters"]').value = encodeURIComponent(JSON.stringify(Object.fromEntries(DNAParameters)));
            form.submit();
        });

        function toggleCollapsible(sectionId) {
            const collapsibleContent = document.getElementById(sectionId);
            collapsibleContent.classList.toggle('active');
        }
    </script>
</body>

</html>
